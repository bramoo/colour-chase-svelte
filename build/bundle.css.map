{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "..\\..\\App.svelte",
    "..\\..\\Ball.svelte",
    "..\\..\\Player.svelte"
  ],
  "sourcesContent": [
    "<script>\r\n  import { flip } from 'svelte/animate';\r\n  import { sineInOut } from 'svelte/easing';\r\n  import { crossfade } from 'svelte/transition';\r\n\r\n  import Ball from './Ball.svelte';\r\n  import Players from './Players.svelte'\r\n\r\n  const balls = [\r\n    { potted: false, colour: '#ffe900' },\r\n    { potted: false, colour: '#03ab70' },\r\n    { potted: false, colour: '#cc731a' },\r\n    { potted: false, colour: '#009cda' },\r\n    { potted: false, colour: '#febfa1' },\r\n    { potted: false, colour: '#151d1f' }\r\n  ];\r\n\r\n  const anim = {\r\n    duration: 100,\r\n    easing: sineInOut\r\n  };\r\n\r\n  const [send, receive] = crossfade({\r\n    ...anim,\r\n    fallback(node, params) {\r\n      const style = getComputedStyle(node);\r\n      const transform = style.transform === 'none' ? '' : style.transform;\r\n\r\n      return {\r\n        ...anim,\r\n        css: t => `\r\n                transform: ${transform} scale(${t});\r\n                opacity: ${t}\r\n              `\r\n      };\r\n    }\r\n  });\r\n</script>\r\n\r\n<style>\r\n  main {\r\n    font-family: Avenir, Helvitica, Arial, sans-serif;\r\n  }\r\n\r\n  main {\r\n    text-align: center;\r\n    padding: 1em;\r\n    max-width: 240px;\r\n    margin: 0 auto;\r\n  }\r\n\r\n  h1 {\r\n    font-size: 4em;\r\n    font-weight: 100;\r\n  }\r\n\r\n  .balls {\r\n    display: flex;\r\n    justify-content: center;\r\n    height: 120px;\r\n  }\r\n\r\n  .table {\r\n    background-color: rgb(2, 107, 2);\r\n  }\r\n\r\n  .rail {\r\n    background-color: rgb(61, 61, 61);\r\n  }\r\n\r\n  @media (min-width: 640px) {\r\n    main {\r\n      max-width: none;\r\n    }\r\n  }\r\n</style>\r\n\r\n<main>\r\n  <h1>Colour Chase</h1>\r\n  <div class=\"balls table\">\r\n    {#each balls.filter(b => !b.potted) as ball (ball.colour)}\r\n      <div\r\n        in:receive={{ key: ball.colour }}\r\n        out:send={{ key: ball.colour }}\r\n        animate:flip={anim}>\r\n        <Ball bind:potted={ball.potted} colour={ball.colour} />\r\n      </div>\r\n    {/each}\r\n  </div>\r\n  <div class=\"balls rail\">\r\n    {#each balls.filter(b => b.potted) as ball (ball.colour)}\r\n      <div\r\n        in:receive={{ key: ball.colour }}\r\n        out:send={{ key: ball.colour }}\r\n        animate:flip={anim}>\r\n        <Ball bind:potted={ball.potted} colour={ball.colour} />\r\n      </div>\r\n    {/each}\r\n  </div>\r\n  <Players />\r\n</main>\r\n",
    "<script>\r\n  export let colour = '#be0000';\r\n  export let potted = false;\r\n</script>\r\n\r\n<style>\r\n  g:hover {\r\n    cursor: pointer;\r\n  }\r\n</style>\r\n\r\n<svg width=\"120px\" height=\"120px\">\r\n  <defs>\r\n    <filter id=\"f\" x=\"0\" y=\"0\" width=\"1\" height=\"1.125\">\r\n      <feFlood flood-color=\"rgb(0,0,0)\" flood-opacity=\"0.75\" result=\"flood\" />\r\n      <feComposite\r\n        in=\"flood\"\r\n        in2=\"SourceGraphic\"\r\n        operator=\"out\"\r\n        result=\"composite1\" />\r\n      <feGaussianBlur in=\"composite1\" result=\"blur\" stdDeviation=\"10\" />\r\n      <feOffset dy=\"-12.5\" result=\"offset\" />\r\n      <feComposite in=\"offset\" in2=\"SourceGraphic\" operator=\"atop\" />\r\n    </filter>\r\n  </defs>\r\n  <g\r\n    on:click={() => {\r\n      potted = !potted;\r\n    }}>\r\n    <circle cx=\"60\" cy=\"60\" r=\"50\" fill={colour} filter=\"url(#f)\" />\r\n    <path\r\n      d=\"m63.82 35.85c-0.26-9.26-0.79-14.91-9.19-21.61 3.32-0.49 6.08-0.42\r\n      8.71-0.21 5.73 3.55 7.42 11.05 7.51 21.88z\"\r\n      fill=\"#fff\" />\r\n    <path\r\n      d=\"m51.09 37.80c-2.36-7.09-9.26-14.97-12.54-17.53 2.44-1.71 4.73-2.81\r\n      7.01-3.83 5.53 4.14 9.32 8.95 11.98 19.19-1.70 0.85-3.53 1.66-6.44 2.17z\"\r\n      fill=\"#fff\" />\r\n  </g>\r\n</svg>\r\n",
    "<script>\r\n    export let name;\r\n    export let colour;\r\n</script>\r\n\r\n<style>\r\n    span {\r\n        display: inline-block;\r\n        width: 2em;\r\n        height: 2em;\r\n        background-color: red;\r\n    }\r\n</style>\r\n\r\n<li>{name} <span class={colour}></span></li>"
  ],
  "names": [],
  "mappings": "AAwCE,IAAI,cAAC,CAAC,AACJ,WAAW,CAAE,MAAM,CAAC,CAAC,SAAS,CAAC,CAAC,KAAK,CAAC,CAAC,UAAU,AACnD,CAAC,AAED,IAAI,cAAC,CAAC,AACJ,UAAU,CAAE,MAAM,CAClB,OAAO,CAAE,GAAG,CACZ,SAAS,CAAE,KAAK,CAChB,MAAM,CAAE,CAAC,CAAC,IAAI,AAChB,CAAC,AAED,EAAE,cAAC,CAAC,AACF,SAAS,CAAE,GAAG,CACd,WAAW,CAAE,GAAG,AAClB,CAAC,AAED,MAAM,cAAC,CAAC,AACN,OAAO,CAAE,IAAI,CACb,eAAe,CAAE,MAAM,CACvB,MAAM,CAAE,KAAK,AACf,CAAC,AAED,MAAM,cAAC,CAAC,AACN,gBAAgB,CAAE,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,AAClC,CAAC,AAED,KAAK,cAAC,CAAC,AACL,gBAAgB,CAAE,IAAI,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE,CAAC,AACnC,CAAC,AAED,MAAM,AAAC,YAAY,KAAK,CAAC,AAAC,CAAC,AACzB,IAAI,cAAC,CAAC,AACJ,SAAS,CAAE,IAAI,AACjB,CAAC,AACH,CAAC;ACpED,eAAC,MAAM,AAAC,CAAC,AACP,MAAM,CAAE,OAAO,AACjB,CAAC;ACFC,IAAI,cAAC,CAAC,AACF,OAAO,CAAE,YAAY,CACrB,KAAK,CAAE,GAAG,CACV,MAAM,CAAE,GAAG,CACX,gBAAgB,CAAE,GAAG,AACzB,CAAC"
}